name: 'Terraform'

on:
  push:
    branches:
      - main
    tags:
      - 'dev-*'
      - 'qa-*'
      - 'prod-*'


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
      
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region:            us-east-1
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
          terraform_version: '1.5.6'

    - name: Determine environment from tag
      id: tag_parse
      run: |
        # strip off the "refs/tags/" prefix
        TAG_NAME=${GITHUB_REF#refs/tags/}
        # take the characters before the first hyphen
        ENV=${TAG_NAME%%-*}
        echo "ENVIRONMENT=$ENV" >> $GITHUB_ENV
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      id: plan
      run: |
        terraform plan -input=false -var-file="${{ env.ENVIRONMENT }}.tfvars" -out=tfplan

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform apply -input=false tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


